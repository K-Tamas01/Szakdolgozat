version: '3.9'
services:

  user:
    container_name: "USER-API"
    ports:
      - "5001:5001"
    build: 
      context: ../USER_API/
    volumes:
      - ../USER_API/:/app
      - /app/node_modules
    depends_on:
      mongo:
        condition: service_healthy

  storage:
    container_name: "STORAGE-API"
    ports:
      - "5002:5002"
    build: 
      context: ../STORAGE_API/
    volumes:
      - ../STORAGE_API/:/app
      - /app/node_modules
    depends_on:
      mongo:
        condition: service_healthy

  order:
    container_name: "ORDER-API"
    ports:
      - "5003:5003"
    build: 
      context: ../ORDER_API/
    volumes:
      - ../ORDER_API/:/app
      - /app/node_modules
    depends_on:
      mongo:
        condition: service_healthy

  delivery_and_billing:
    container_name: "DELIVERY-AND-BILLING-API"
    ports:
      - "5004:5004"
    build: 
      context: ../DELIVERY_AND_BILLING_API/
    volumes:
      - ../DELIVERY_AND_BILLING_API/:/app
      - /app/node_modules
    depends_on:
      mongo:
        condition: service_healthy

  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"

  mongo:
    container_name: mongo-database
    build: 
      context: "./mongo"
    env_file:
      - ./env/mongodb.dev.env
    ports:
      - "27017:27017"
    volumes:
      - ./mongo/Init/init.js:/docker-entrypoint-initdb.d/init.js
      - ./mongo_data:/data/db
    restart: always
    healthcheck:
      test: ["CMD", "mongo", "-u", "root", "-p", "password", "--quiet", "--eval", "'db.stats().ok'"]
      interval: 5s


      
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "3010:8010"
    env_file:
      - ./env/mongoexpress.dev.env
    depends_on:
      mongo:
        condition: service_healthy


volumes:
  mongo_data:
    driver: local
    driver_opts:
      type: none
      device: $PWD/mongo_data
      o: bind